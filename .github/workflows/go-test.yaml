name: go-build-and-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            go: '1.15'
            path_name: neckless
            bin_name: ./neckless-linux

          - platform: [ macos-latest ]
            #'self-hosted', 'macOS', 'X64']
            # macos-latest
            go: '1.15'
            path_name: neckless
            bin_name: ./neckless-macos

          - platform: [ windows-latest ]
            #'self-hosted', 'Windows', 'X64']
            go: '1.15'
            path_name: neckless.exe
            bin_name: ./neckless-win.exe

    name: Build Go ${{ matrix.go }} ${{ matrix.platform.stringList }} neckless
    steps:
      - uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Build Plain Executable for ${{ matrix.os }}
        run: |
          make test
          make build BIN_NAME=${{ matrix.bin_name }} GITCOMMIT=${{ github.sha }}

      # - env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   name: Build Docker for ${{ matrix.os }}
      #   if: ${{ matrix.platform == 'ubuntu-latest' }}
      #   run: |
      #     echo $GITHUB_TOKEN | docker login docker.pkg.github.com/ -u mabels --password-stdin
      #     GITCOMMIT=$(git rev-parse --short HEAD)
      #     echo Docker build $GITCOMMIT
      #     docker build . --tag neckless/${{ matrix.bin_name }}:$GITCOMMIT
      #     docker tag neckless/${{ matrix.bin_name }}:$GITCOMMIT docker.pkg.github.com/mabels/neckless/neckless:$GITCOMMIT-amd64
      #     docker push docker.pkg.github.com/mabels/neckless/neckless:$GITCOMMIT-amd64
