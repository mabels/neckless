on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  create-release:
    runs-on: ubuntu-latest
    name: Create Release
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - shell: bash
        run: |
          echo UPLOAD_URL=${{ toJson(steps.create_release.outputs.upload_url) }} > upload_url.env
          echo "========"
          cat upload_url.env
          echo "========"
      - name: Upload upload_url.env
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.env

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        #platform: [ubuntu-latest]
        # , macos-latest, windows-latest]
        include:
        - platform: ubuntu-latest
          path_name: neckless
          bin_name: neckless-linux
        - platform: macos-latest
          path_name: neckless
          bin_name: neckless-mac
        - platform: windows-latest
          path_name: neckless.exe
          bin_name: neckless-win.exe
    runs-on: ${{ matrix.platform }}
# The workflow is not valid. .github/workflows/release.yaml (Line: 43, Col:
# 18): Unrecognized named-value: 'matrix'. Located at position 1 within
# expression: matrix.platform,.github/workflows/release.yaml (Line: 43,
# Col: 18): Unexpected value '${{ matrix.platform }}'
    steps:
      - name: Download upload_url.env
        id: upload_url
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - shell: bash
        run: |
          find . -type f -ls
          source ./upload_url/upload_url.env
          echo "========"
          cat ./upload_url/upload_url.env
          echo "========"
          export UPLOAD_URL
          echo "========"
          echo $UPLOAD_URL
          echo "========"
          echo "::set-env name=UPLOAD_URL::$UPLOAD_URL"
      #   node -e "require('@actions/core').setOutput('upload_url', process.env.UPLOAD_URL)" || true
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        id: build_project
        run: |
          make build BIN_NAME=${{ matrix.bin_name }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./${{ matrix.bin_name }}
          asset_name: ${{ matrix.bin_name }}
          asset_content_type: application/golang

