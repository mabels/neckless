on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release 
            - First Change
            - Second Change
          draft: false
          prerelease: false
    steps:
      - name: Build Release
        strategy:
          matrix:
            platform: [ubuntu-latest, macos-latest, windows-latest]
            include:
              - platform: ubuntu-latest
                path_name: neckless
                bin_name: neckless-linux
              - platform: macos-latest
                path_name: neckless
                bin_name: neckless-mac
              - platform: windows-latest
                path_name: neckless.exe
                bin_name: neckless-win.exe
        runs-on: ${{ matrix.platform }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Build project 
            run: |
              make
          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: ./${{ matrix.path_name }}
              asset_name: ${{ matrix.bin_name }}
              asset_content_type: application/golang
